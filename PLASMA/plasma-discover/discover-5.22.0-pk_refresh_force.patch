diff '--color=auto' -r -U3 discover-5.22.0.orig/libdiscover/backends/PackageKitBackend/PackageKitBackend.cpp discover-5.22.0/libdiscover/backends/PackageKitBackend/PackageKitBackend.cpp
--- discover-5.22.0.orig/libdiscover/backends/PackageKitBackend/PackageKitBackend.cpp	2021-06-08 21:43:07.470270259 +0300
+++ discover-5.22.0/libdiscover/backends/PackageKitBackend/PackageKitBackend.cpp	2021-06-08 21:43:44.294423076 +0300
@@ -394,7 +394,7 @@
 
     if (!m_refresher) {
         acquireFetching(true);
-        m_refresher = PackageKit::Daemon::refreshCache(false);
+        m_refresher = PackageKit::Daemon::refreshCache(true);
 
         connect(m_refresher.data(), &PackageKit::Transaction::errorCode, this, &PackageKitBackend::transactionError);
         connect(m_refresher.data(), &PackageKit::Transaction::finished, this, [this]() {
diff '--color=auto' -r -U3 discover-5.22.0.orig/libdiscover/backends/PackageKitBackend/PackageKitNotifier.cpp discover-5.22.0/libdiscover/backends/PackageKitBackend/PackageKitNotifier.cpp
--- discover-5.22.0.orig/libdiscover/backends/PackageKitBackend/PackageKitNotifier.cpp	2021-06-08 21:43:07.469270255 +0300
+++ discover-5.22.0/libdiscover/backends/PackageKitBackend/PackageKitNotifier.cpp	2021-06-08 21:44:33.839628680 +0300
@@ -51,7 +51,7 @@
             bool ok;
             const int days = value.toInt(&ok);
             if (!ok || days == 0) {
-                regularCheck->setInterval(24 * 60 * 60 * 1000); // refresh at least once every day
+                regularCheck->setInterval(12 * 60 * 60 * 1000); // refresh at least twice every day
                 regularCheck->start();
                 if (!value.isEmpty())
                     qWarning() << "couldn't understand value for timer:" << value;
@@ -229,7 +229,7 @@
 void PackageKitNotifier::refreshDatabase()
 {
     if (!m_refresher) {
-        m_refresher = PackageKit::Daemon::refreshCache(false);
+        m_refresher = PackageKit::Daemon::refreshCache(true);
         connect(m_refresher.data(), &PackageKit::Transaction::finished, this, &PackageKitNotifier::recheckSystemUpdateNeeded);
     }
 
